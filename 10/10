给出集合 [1,2,3,...,n]，其所有元素共有 n! 种排列。 按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：

"123" "132" "213" "231" "312" "321" 给定 n 和 k，返回第 k 个排列。

暴力法 每一次都获取下一个排列

In [ ]:
class Solution:
    def getPermutation(self, n: int, k: int) -> str:
        nums = [i for i in range(1, n+1)]
        for i in range(k-1):
            self.permute(nums)
        return "".join([str(i) for i in nums])
    
    def permute(self, nums: list) -> None:
        run = False
        for i in range(len(nums)-1, 0, -1):
            if nums[i] > nums[i-1]:
                for k in range(len(nums)-1, 0, -1):
                    if nums[k]>nums[i-1]:
                        nums[k], nums[i-1] = nums[i-1], nums[k]
                        nums[i:] = nums[i:][::-1]
                        return
